{"version":3,"file":"static/js/683.7a8428b8.chunk.js","mappings":"qRAGaA,EAAmBC,EAAAA,GAAAA,QAAH,+GAOhBC,EAAiBD,EAAAA,GAAAA,GAAH,4IAQdE,EAAiBF,EAAAA,GAAAA,IAAH,mFAMdG,EAAiBH,EAAAA,GAAAA,MAAH,gJASdI,GAAiBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4SAadM,GAAwBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,uCAIrBQ,EAAwBR,EAAAA,GAAAA,OAAH,8c,UClC5BS,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KAAaE,SAAS,cAqDlC,EAlDc,WACZ,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,SAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,UAACpB,EAAD,YACE,SAACE,EAAD,qDACA,SAAC,KAAD,CACEmB,cAAe,CAAET,MAAO,GAAIE,SAAU,IACtCJ,iBAAkBA,EAClBY,SAhBa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAO,CACXb,MAAOW,EAAOX,MACdE,SAAUS,EAAOT,UAEnBC,GAASW,EAAAA,EAAAA,IAAMD,IACfR,EAAS,aACTO,GACD,EAKK,SAKG,gBAAGG,EAAH,EAAGA,aAAH,OACC,SAAC,KAAD,WACE,UAACxB,EAAD,YACA,UAACC,EAAD,CAAgBwB,QAAQ,QAAxB,mBACI,SAACvB,EAAD,CAAgBwB,KAAK,QAAQC,KAAK,QAAQC,aAAa,cAE3D,SAACxB,EAAD,CAAuBuB,KAAK,QAAQE,UAAU,SAE9C,UAAC5B,EAAD,CAAgBwB,QAAQ,WAAxB,sBACA,SAACvB,EAAD,CACEwB,KAAK,WACLC,KAAK,WACLC,aAAa,iBAGf,SAACxB,EAAD,CAAuBuB,KAAK,WAAWE,UAAU,SAEjD,SAACvB,EAAD,CAAuBoB,KAAK,SAASI,SAAUN,EAA/C,uBAjBH,QA2BV,C","sources":["pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const LoginFormWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 60px;\n`;\n\nexport const LoginFormTitle = styled.h2`\n  margin: 0 0 80px;\n  font-size: 32px;\n  font-style: oblique;\n  color: #576574;\n  text-shadow: #000 0px 0 1px;\n`;\n\nexport const LoginFormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const LoginFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 18px;\n  margin-bottom: 8px;\n  color: #576574;\n`;\n\nexport const LoginFormInput = styled(Field)`\n  min-width: 280px;\n  padding: 8px;\n  font-size: 20px;\n  border: 1px solid rgba(33, 33, 33, 0.5);\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  outline: none;\n   &:hover {\n   box-shadow: 0px 4px 4px rgba(0, 0, 200, 0.5);\n`;\n\nexport const LoginFormErrorMessage = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const LoginFormSubmitButton = styled.button`\n   padding: 8px 18px;\n  font-size: 20px;\n  border: none;\n  border-radius: 2px;\n  background-color:rgba(34, 47, 62, 0.4);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #70a1ff;\n    border-color: #70a1ff;\n    overflow: hidden;\n    box-shadow: 0px 2px 2px rgba(0, 0, 200, 0.5);\n\n  &:disabled {\n    background-color: lightgray;\n    cursor: default;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { logIn } from 'redux/auth/operations';\nimport { Container } from '@mui/material';\nimport * as Yup from 'yup';\nimport {\n  LoginFormErrorMessage,\n  LoginFormField,\n  LoginFormInput,\n  LoginFormLabel,\n  LoginFormSubmitButton,\n  LoginFormTitle,\n  LoginFormWrapper,\n} from './Login.styled';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleSubmit = (values, { resetForm }) => {\n    const user = {\n      email: values.email,\n      password: values.password,\n    };\n    dispatch(logIn(user));\n    navigate('/contacts');\n    resetForm();\n  };\n  return (\n    <Container maxWidth=\"xl\">\n      <LoginFormWrapper>\n        <LoginFormTitle>Please, login to access your contacts</LoginFormTitle>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <LoginFormField>\n              <LoginFormLabel htmlFor=\"email\">Email\n                  <LoginFormInput type=\"email\" name=\"email\" autoComplete=\"email\" />\n                  </LoginFormLabel>\n              <LoginFormErrorMessage name=\"email\" component=\"div\" />\n\n              <LoginFormLabel htmlFor=\"password\">Password\n              <LoginFormInput\n                type=\"password\"\n                name=\"password\"\n                autoComplete=\"password\"\n                  />\n                  </LoginFormLabel>\n              <LoginFormErrorMessage name=\"password\" component=\"div\" />\n\n              <LoginFormSubmitButton type=\"submit\" disabled={isSubmitting}>\n                Login\n                </LoginFormSubmitButton>\n                </LoginFormField>\n            </Form>\n          )}\n        </Formik>\n      </LoginFormWrapper>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["LoginFormWrapper","styled","LoginFormTitle","LoginFormField","LoginFormLabel","LoginFormInput","Field","LoginFormErrorMessage","ErrorMessage","LoginFormSubmitButton","validationSchema","Yup","email","required","password","dispatch","useDispatch","navigate","useNavigate","Container","maxWidth","initialValues","onSubmit","values","resetForm","user","logIn","isSubmitting","htmlFor","type","name","autoComplete","component","disabled"],"sourceRoot":""}