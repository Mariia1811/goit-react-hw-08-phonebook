{"version":3,"file":"static/js/315.5d44ad09.chunk.js","mappings":"iQAGaA,EAAsBC,EAAAA,GAAAA,IAAH,6FAMnBC,EAAoBD,EAAAA,GAAAA,GAAH,oEAKjBE,EAAoBF,EAAAA,GAAAA,IAAH,6FAMjBG,EAAoBH,EAAAA,GAAAA,MAAH,mEAKjBI,GAAoBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6DAKjBM,GAA2BN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,uCAIxBQ,EAA2BR,EAAAA,GAAAA,OAAH,oU,UCpB/BS,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,KAAaE,SAAS,YAC5BC,MAAOH,EAAAA,KAAaG,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUJ,EAAAA,KAAaE,SAAS,YAChCG,gBAAiBL,EAAAA,KACdM,MAAM,CAACN,EAAAA,GAAQ,YAAa,MAAO,wBACnCE,SAAS,cAuEd,EApEqB,WACnB,IAAMK,GAAWC,EAAAA,EAAAA,MAWjB,OACE,UAACnB,EAAD,YACE,SAACE,EAAD,iCACA,SAAC,KAAD,CACEkB,cAAe,CACbR,KAAM,GACNE,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAEnBN,iBAAkBA,EAClBW,SApBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAU,CACdZ,KAAMU,EAAOV,KACbE,MAAOQ,EAAOR,MACdC,SAAUO,EAAON,iBAEnBE,GAASO,EAAAA,EAAAA,IAASD,IAClBD,GACD,EAIG,SAUG,gBAAGG,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,YACE,UAACvB,EAAD,YACE,SAACC,EAAD,CAAmBuB,QAAQ,OAA3B,mBACA,SAACtB,EAAD,CAAmBuB,KAAK,OAAOhB,KAAK,UACpC,SAACL,EAAD,CAA0BK,KAAK,OAAOiB,UAAU,YAGlD,UAAC1B,EAAD,YACE,SAACC,EAAD,CAAmBuB,QAAQ,QAA3B,4BAGA,SAACtB,EAAD,CAAmBuB,KAAK,QAAQhB,KAAK,WACrC,SAACL,EAAD,CAA0BK,KAAK,QAAQiB,UAAU,YAGnD,UAAC1B,EAAD,YACE,SAACC,EAAD,CAAmBuB,QAAQ,WAA3B,uBACA,SAACtB,EAAD,CAAmBuB,KAAK,WAAWhB,KAAK,cACxC,SAACL,EAAD,CAA0BK,KAAK,WAAWiB,UAAU,YAGtD,UAAC1B,EAAD,YACE,SAACC,EAAD,CAAmBuB,QAAQ,kBAA3B,+BAGA,SAACtB,EAAD,CAAmBuB,KAAK,WAAWhB,KAAK,qBACxC,SAACL,EAAD,CACEK,KAAK,kBACLiB,UAAU,YAId,SAACpB,EAAD,CAA0BmB,KAAK,SAASE,SAAUJ,EAAlD,wBAjCH,MAyCR,C","sources":["pages/Register/Register.styled.js","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const RegisterFormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-size: 24px;\n  margin-bottom: 16px;\n`;\n\nexport const RegisterFormField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const RegisterFormLabel = styled.label`\n  font-size: 18px;\n  margin-bottom: 8px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  padding: 8px;\n  font-size: 18px;\n`;\n\nexport const RegisterFormErrorMessage = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const RegisterFormSubmitButton = styled.button`\n  padding: 8px 16px;\n  font-size: 18px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0069d9;\n  }\n\n  &:disabled {\n    background-color: lightgray;\n    cursor: default;\n  }\n`;\n","import { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport {\n  RegisterFormErrorMessage,\n  RegisterFormField,\n  RegisterFormInput,\n  RegisterFormLabel,\n  RegisterFormSubmitButton,\n  RegisterFormTitle,\n  RegisterFormWrapper,\n} from './Register.styled';\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Required'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newUser = {\n      name: values.name,\n      email: values.email,\n      password: values.confirmPassword,\n    };\n    dispatch(register(newUser));\n    resetForm();\n  };\n  return (\n    <RegisterFormWrapper>\n      <RegisterFormTitle>Registration Form</RegisterFormTitle>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <RegisterFormField>\n              <RegisterFormLabel htmlFor=\"name\">Name</RegisterFormLabel>\n              <RegisterFormInput type=\"text\" name=\"name\" />\n              <RegisterFormErrorMessage name=\"name\" component=\"div\" />\n            </RegisterFormField>\n\n            <RegisterFormField>\n              <RegisterFormLabel htmlFor=\"email\">\n                Email Address\n              </RegisterFormLabel>\n              <RegisterFormInput type=\"email\" name=\"email\" />\n              <RegisterFormErrorMessage name=\"email\" component=\"div\" />\n            </RegisterFormField>\n\n            <RegisterFormField>\n              <RegisterFormLabel htmlFor=\"password\">Password</RegisterFormLabel>\n              <RegisterFormInput type=\"password\" name=\"password\" />\n              <RegisterFormErrorMessage name=\"password\" component=\"div\" />\n            </RegisterFormField>\n\n            <RegisterFormField>\n              <RegisterFormLabel htmlFor=\"confirmPassword\">\n                Confirm Password\n              </RegisterFormLabel>\n              <RegisterFormInput type=\"password\" name=\"confirmPassword\" />\n              <RegisterFormErrorMessage\n                name=\"confirmPassword\"\n                component=\"div\"\n              />\n            </RegisterFormField>\n\n            <RegisterFormSubmitButton type=\"submit\" disabled={isSubmitting}>\n              Register\n            </RegisterFormSubmitButton>\n          </Form>\n        )}\n      </Formik>\n    </RegisterFormWrapper>\n  );\n};\n\nexport default RegisterForm;\n"],"names":["RegisterFormWrapper","styled","RegisterFormTitle","RegisterFormField","RegisterFormLabel","RegisterFormInput","Field","RegisterFormErrorMessage","ErrorMessage","RegisterFormSubmitButton","validationSchema","Yup","name","required","email","password","confirmPassword","oneOf","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","newUser","register","isSubmitting","htmlFor","type","component","disabled"],"sourceRoot":""}