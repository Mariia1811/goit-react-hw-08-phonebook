{"version":3,"file":"static/js/311.b2ebc6f0.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectContacts.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/FormContacts/FormContacts.styled.js","components/FormContacts/FormContacts.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilterValue = state => state.contacts.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return contacts?.filter(contact =>\n      contact.name?.toLowerCase().includes(filter?.toLocaleLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const TitleList = styled.h2`\n  margin: 0 0 20px;\n  font-size: 32px;\n  font-style: oblique;\n  color: #576574;\n  text-shadow: #000 0px 0 1px;\n`;\n\nexport const ContactList = styled.ul`\n  margin: 16px;\n  padding: 0;\n`;\nexport const ItemEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const NumberEl = styled.span`\n  margin: 0 10px;\n  font-style: italic;\n`;\nexport const BtnDellete = styled.button`\n  padding: 4px;\n  font-size: 16px;\n  border: none;\n  border-radius: 2px;\n  background-color: rgba(34, 47, 62, 0.4);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #70a1ff;\n    border-color: #70a1ff;\n    overflow: hidden;\n    box-shadow: 0px 2px 2px rgba(0, 0, 200, 0.5);\n\n    &:disabled {\n      background-color: lightgray;\n      cursor: default;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selectContacts';\nimport {\n  BtnDellete,\n  ContactList,\n  ItemEl,\n  NumberEl,\n  TitleList,\n} from './ContactsList.styled';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contactsList = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleClick = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <TitleList>Contacts</TitleList>\n      <ContactList>\n        {contactsList?.map(({ id, name, number }) => (\n          <ItemEl key={id}>\n            <span>{name}: </span>\n            <NumberEl>{number}</NumberEl>\n            <BtnDellete onClick={() => handleClick(id)}>Delete</BtnDellete>\n          </ItemEl>\n        ))}\n      </ContactList>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  margin-bottom: 16px;\n  text-align: center;\n`;\nexport const Text = styled.p`\n  margin: 0;\n  font-style: italic;\n  font-size: 20px;\n  color: #576574;\n`;\n\nexport const Input = styled.input`\n   min-width: 280px;\n  padding: 6px;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  outline: none;\n   &:hover {\n   box-shadow: 0px 4px 4px rgba(0, 0, 200, 0.5);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/sliceContacts';\nimport { selectFilterValue } from 'redux/contacts/selectContacts';\nimport { FilterWrap, Input, Text } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <FilterWrap>\n      <Text>Find contacts by name</Text>\n      <Input\n        name=\"filter\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleChange}\n      />\n    </FilterWrap>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const Title = styled.h2`\n  margin: 0 0 20px;\n  font-size: 32px;\n  font-style: oblique;\n  color: #576574;\n  text-shadow: #000 0px 0 1px;\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  align-items: flex-end;\n  font-size: 18px;\n  color: #576574;\n`;\n\nexport const Input = styled(Field)`\n   min-width: 280px;\n   margin-left: 16px;\n  padding: 8px;\n  font-size: 20px;\n  border: 1px solid rgba(33, 33, 33, 0.5);\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  outline: none;\n   &:hover {\n   box-shadow: 0px 4px 4px rgba(0, 0, 200, 0.5);\n`;\nexport const BtnStyled = styled.button`\n    padding: 8px 18px;\n  font-size: 20px;\n  border: none;\n  border-radius: 2px;\n  background-color:rgba(34, 47, 62, 0.4);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  outline: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #70a1ff;\n    border-color: #70a1ff;\n    overflow: hidden;\n    box-shadow: 0px 2px 2px rgba(0, 0, 200, 0.5);\n\n  &:disabled {\n    background-color: lightgray;\n    cursor: default;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectContacts';\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FormStyled, Input, BtnStyled, Title } from './FormContacts.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nconst FormElem = () => {\n  const contactsList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      name: values.name,\n      number: values.number,\n    };\n\n    if (contactsList.some(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n\n      <FormStyled>\n        <Title>Add contact</Title>\n        <label>\n          Name:\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number:\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <BtnStyled type=\"submit\">Add contact</BtnStyled>\n      </FormStyled>\n    </Formik>\n  );\n};\n\nexport default FormElem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 30px 60px;\n  font-size: 28px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url(https://img.freepik.com/free-photo/vivid-blurred-colorful-background_58702-2655.jpg);\n  border-radius: 10px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`;\n","import ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport FormElem from 'components/FormContacts';\nimport Container from '@mui/material/Container';\nimport { Wrapper } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <Container maxWidth=\"xl\">\n      <Wrapper>\n        <FormElem />\n        <div>\n          <Filter />\n          <ContactsList />\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilterValue","filter","selectFilteredContacts","contact","toLowerCase","includes","toLocaleLowerCase","TitleList","styled","ContactList","ItemEl","NumberEl","BtnDellete","dispatch","useDispatch","contactsList","useSelector","useEffect","fetchContacts","id","number","onClick","deleteContact","handleClick","FilterWrap","Text","Input","filterValue","type","onChange","e","changeFilter","target","Title","FormStyled","Form","Field","BtnStyled","schema","yup","shape","required","initialValues","validationSchema","onSubmit","values","resetForm","newContact","some","alert","addContact","pattern","title","Wrapper","Container","maxWidth"],"sourceRoot":""}